<?xml version="1.0" encoding="utf-8"?>
<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:fitsSystemWindows="true"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
<!--https://www.jianshu.com/p/bbc703a0015e-->
    <com.google.android.material.appbar.AppBarLayout
        android:id="@+id/appbar"
        android:fitsSystemWindows="true"
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
        android:layout_height="192dp"
        android:layout_width="match_parent">
<!-- app:layout_scrollFlags="scroll|enterAlways|enterAlwaysCollapsed"-->
        <!--
        在themes style状态栏设置为透明，  <item name="android:statusBarColor">@android:color/transparent</item>
        View都添加fitsSystemWindows属性.
        就能实现透明或半透明的的效果
        -->
        <!--
        添加app:layout_scrollFlags来设置各子View执行的动作
       如果app:layout_scrollFlags没设置scroll，CollapsingToolbarLayout就会一直显示，而不会折叠
enterAlways: view向下滚动时候，CollapsingToolbarLayout就会显示出来，而不是滚动到最上面才显示
enterAlwaysCollapsed 是enterAlways的附加选项，一般跟enterAlways一起使用，它是指，View在往下“出现”的时候，首先是enterAlways效果，当View的高度达到最小高度时，View就暂时不去往下滚动，直到ScrollView滑动到顶部不再滑动时，View再继续往下滑动，直到滑到View的顶部结束
exitUntilCollapsed 当这个View要往上逐渐“消逝”时，会一直往上滑动，直到剩下的的高度达到它的最小高度后，再响应ScrollView的内部滑动事件。
collapseMode可以更改折叠模式，如果为值为pin，就能一直显示actionbar的图标
        -->
        <com.google.android.material.appbar.CollapsingToolbarLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:toolbarId="@+id/toolbar"
            app:layout_collapseMode="parallax"
            app:layout_scrollFlags="scroll"
            app:layout_scrollInterpolator="@android:anim/decelerate_interpolator"
            android:background="@drawable/sky"

            app:contentScrim="?attr/colorPrimary">

            <ImageView
                android:id="@+id/app_bar_image"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                app:layout_collapseMode="parallax"
                android:src="@drawable/sky"
                android:scaleType="centerCrop" />

            <androidx.appcompat.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_height="?attr/actionBarSize"
                android:layout_width="match_parent"
                app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
                >

            </androidx.appcompat.widget.Toolbar>
        </com.google.android.material.appbar.CollapsingToolbarLayout>
    </com.google.android.material.appbar.AppBarLayout>
<!--
app:layout_behavior="@string/appbar_scrolling_view_behavior"
为appbar设置滚动动作的一个behavior. 没有这个属性的话, Appbar就是死的,有了它就有了灵魂.
-->
    <androidx.core.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior"
       >

        <include layout="@layout/textcontext">

    </include>
    </androidx.core.widget.NestedScrollView>

    <com.google.android.material.floatingactionbutton.FloatingActionButton
        android:id="@+id/flb"
        android:layout_height="wrap_content"
        android:layout_width="wrap_content"
        android:src="@android:drawable/ic_input_add"
        android:layout_gravity="bottom|end"
        android:layout_margin="16dp"
        android:contentDescription="button" />
</androidx.coordinatorlayout.widget.CoordinatorLayout>